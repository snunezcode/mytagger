AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for AWS App Runner service with WAF protection'

Parameters:

  StackID:
    Type: String
    Description: 'StackIdentifier'
    Default: 'Stack-01'

  DockerImage:
    Type: String
    Description: 'Docker image URI'
    Default: 'public.ecr.aws/nginx/nginx:stable-perl'
  
  AllowedIPv4CIDR:
    Type: String
    Description: 'IPv4 CIDR block to allow access'
    Default: '192.168.1.1/32'
    AllowedPattern: '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$'
  
  AllowedIPv6CIDR:
    Type: String
    Description: 'IPv6 CIDR block to allow access'
    Default: '::/0'
    AllowedPattern: '^s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]d|1dd|[1-9]?d)(.(25[0-5]|2[0-4]d|1dd|[1-9]?d)){3}))|:)))(%.+)?s*(\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))$'

Resources:
  AppRunnerWAFWebACL:
    Type: 'AWS::WAFv2::WebACL'
    Properties:
      Name: !Sub '${StackID}-apprunner-waf'
      Scope: 'REGIONAL'
      Description: 'WAF WebACL for App Runner service with IP-based allow rules'
      DefaultAction:
        Block: {}
      VisibilityConfig:
        SampledRequestsEnabled: true
        CloudWatchMetricsEnabled: true
        MetricName: !Sub '${StackID}-apprunner-waf'
      Rules:
        - Name: 'AllowIPv4Rule'
          Priority: 0
          Statement:
            IPSetReferenceStatement:
              ARN: !GetAtt IPv4IPSet.Arn
          Action:
            Allow: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: 'AllowIPv4Rule'
        - Name: 'AllowIPv6Rule'
          Priority: 1
          Statement:
            IPSetReferenceStatement:
              ARN: !GetAtt IPv6IPSet.Arn
          Action:
            Allow: {}
          VisibilityConfig:
            SampledRequestsEnabled: true
            CloudWatchMetricsEnabled: true
            MetricName: 'AllowIPv6Rule'

  IPv4IPSet:
    Type: 'AWS::WAFv2::IPSet'
    Properties:
      Name: !Sub '${StackID}-ipv4-allow-list'
      Description: 'IPv4 addresses allowed to access App Runner service'
      Scope: 'REGIONAL'
      IPAddressVersion: 'IPV4'
      Addresses:
        - !Ref AllowedIPv4CIDR

  IPv6IPSet:
    Type: 'AWS::WAFv2::IPSet'
    Properties:
      Name: !Sub '${StackID}-ipv6-allow-list'
      Description: 'IPv6 addresses allowed to access App Runner service'
      Scope: 'REGIONAL'
      IPAddressVersion: 'IPV6'
      Addresses:
        - !Ref AllowedIPv6CIDR

  AppRunnerAccessRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'build.apprunner.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess'

AppRunnerInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: build.apprunner.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess'
        - 'arn:aws:iam::aws:policy/AdministratorAccess'

  AppRunnerService:
    Type: 'AWS::AppRunner::Service'
    DependsOn: AppRunnerWAFWebACL
    Properties:
      ServiceName: !Sub '${StackID}-apprunner-service'
      SourceConfiguration:
        AuthenticationConfiguration:
          AccessRoleArn: !GetAtt AppRunnerAccessRole.Arn
        ImageRepository:
          ImageIdentifier: !Ref DockerImage
          ImageConfiguration:
            Port: '80'
          ImageRepositoryType: 'ECR'
        AutoDeploymentsEnabled: false
      InstanceConfiguration:
        Cpu: '1 vCPU'
        Memory: '2 GB'
      NetworkConfiguration:
        IngressConfiguration:
          IsPubliclyAccessible: true

  WebACLAssociation:
    Type: 'AWS::WAFv2::WebACLAssociation'
    DependsOn: AppRunnerService
    Properties:
      ResourceArn: !GetAtt AppRunnerService.ServiceArn
      WebACLArn: !GetAtt AppRunnerWAFWebACL.Arn

Outputs:
  AppRunnerServiceURL:
    Description: 'URL of the App Runner service'
    Value: !GetAtt AppRunnerService.ServiceUrl
